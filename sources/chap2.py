from tkinter import *
import ttkbootstrap as tb
mainFrame=tb.Frame()

s1_content = {
    "h1_titre": ["Opérateurs 1 (élémentaires)"],
    "h3_stitre1": ["Effectuer des operations avec Python"],
    "p_paragraphe1": ["Afin de communiquer avec la machine, le language python passe par un ‘interprète Python’, qui traduit les commandes en language machine pour l’ordinateurMais on peut directement communiquer avec l’interprète a travers la console Python sans avoir a écrire un programme"],
    "p_paragraphe2": ["Grace a cet interprète on peut performer des operations Python sans avoir a écrire un programme.Python peut performer des operations d’arithmétiques comme une calculatrice."],
    "h3_stitre2": ["Liste d’opérateurs élémentaires"],
    "li_text1_1":["L’addition est notée par le symbole: $+$"],
    "li_text1_2":["La soustraction est notée par le symbole: $-$"],
    "li_text1_3":["La multiplication est notée par le symbole: $*$"],
    "li_text1_4":["La division est notée par le symbole: $/$"],
    "i_remarque":["REMARQUE: Les nombres a virgule sont notes avec un point et non pas une virgule. Dans Python la virgule sert a séparer deux valeurs. "],
    "p_paragraphe1": ["On peut aussi performer une division euclidienne avec $//$ et $%$"],
    "li_text2_1":["Afin d’obtenir le quotient, on utilise: $//$"],
    "li_text2_2":["Afin d’obtenir le reste, on utilise: $%$"],
    "p_paragraphe3": ["Et enfin, on utilise l’opérateur ** afin d’effectuer une exponentiation"],
    "c_ex1":["$>>> 2**3$"],
    "c_ex2":["$>>> 8   $"]
    }
s2_content = {
    "h1_titre": ["Opérateurs 2: Variables"],
    "h3_stitre1": ["Stocker les résultats d’operations aux variables"],
    "p_paragraphe1": ["Les résultats calcules peuvent êtres sauvegarder dans l’interprète en leur assignant en nom"],
    "c_ex1":["$>>> a = 1+1$"],
    "c_ex2":["$>>>        $"],
    "p_paragraphe2": ["Dans ce cas, le résultat de $1+1$ est stocke dans la variable $a$ ."],
    "i_remarque":["REMARQUE: Il est recommande de nommer les variables de manière intuitive au lieu qu’avec des lettres"],
    "p_paragraphe3": ["On peut accéder a la variable dans la console en utilisant le nom $a$:"],
    "c_ex3":["$>>> a$"],
    "c_ex4":["$>>> 2$"],
    "p_paragraphe4": ["On peut donc créer un programme qui effectue des calculs grâces a ces variablesLes variables ne sont pas seulement des façons de stocker des résultats, on peut aussi performer des operations avec elles:"],
    "c_ex5":["$>>> a = 2    $"],
    "c_ex6":["$>>> b = a * 2$"],
    "c_ex7":["$>>> b        $"],
    "c_ex8":["$>>> 4        $"],
    "p_paragraphe5": ["Dans cette exemple, on multiplie la valeur de a, qui a ete précédemment assignée par $a = 2$.Donc $b = a*2$ est équivalent a $b= 2*2$. b est donc égal a 4"],
    "h3_stitre2": ["Faire un programme effectuant nos operations"],
    "p_paragraphe5": ["Jusque la nous avons vu les operations d’arithmétique en communiquant directement avec l’interprète python, mais on peut aussi faire un programme qui performe et affiche ces operations directement"],
    "h3_stitre3": ["Exemple:"],
    "p_paragraphe6": ["Voici un programme qui mets la variable $x$ au cube et affiche le résultat:"],
    }
s3_content = {
    "h1_titre": ["Opérateurs 3: Opérateurs d’assignation"],
    "h3_stitre1": ["Opérations d'affectation"],
    "p_paragraphe1": ["Dans Opérateurs 2 on a vu comment stocker des résultats dans des variables, et comment performer des operations sur celles ci. Par conséquences, on peut stocker les résultats des operations que l’on performe dans une variable dans la mème variable:"],
    "p_paragraphe2": ["Dans cette exemple, on obtient 2, car $x = 1$, donc on substitue x par 1 dans  $x = x + 1$ ce qui nous donne $x = 1 + 1 = 2$"],
    "p_paragraphe3": ["Un autre exemple:"],
    "p_paragraphe4": ["Le programme affiche 15 car en substituant a pour 3, on obtient $a = 3 * (2 + 3) = 3 * 5 = 15$"],
    "h3_stitre2": ["Opérateurs d'affectation"],
    "p_paragraphe4": ["Ce type d’operations est utilise très fréquemment dans Python afin de mettre a jour des variables, au point que Python comporte un opérateurs dit d’assignations pour chaque une des 7 operations basiques qui permettent d’effectuer l’operation sur la variable qu’on assigne sans avoir a la référencer 2 fois:"],
    "p_paragraphe5": ["Ce programme effectue la mème operation que l’-Exemple 1.- l’opérateur $+=$ est l’opérateur d’assignation qui permet d’ajouter une valeur a la valeur stockée dans la variable."],
    "p_paragraphe6": ["Le reste des opérateurs d’assignations sont:"],
    "li_text1_1":["$-=$: Soustrait une valeur a la valeur stockée dans la variable."],
    "li_text1_2":["$*=$: Multiplie une valeur par la valeur stockée dans la variable."],
    "li_text1_3":["$/=$: Divise une valeur par la valeur stockée dans la variable."],
    "li_text1_4":["$//=$: Obtient le quotient de la division une d’valeur par la valeur stockée dans la variable."],    
    "li_text1_5":["$%=$: Obtient le reste de la division d’une valeur par la valeur stockée dans la variable."],    
    "li_text1_6":["$**=$: Mets la valeur stockée dans la variable a la puissance d’une valeur"],        
    "h3_stitre3": ["Exercice"],
    }
s4_content = {
    "h1_titre": ["Comparaisons"],
    "h3_stitre1": ["Egalite et inegalites"],
    "p_paragraphe1": ["Python est capable d'effectuer toute une série de comparaisons entre le contenu de deux variables,en renvoyant un -booleen- `True` ou `False` si la comparaisons est verifiee ou pas."],
    "p_paragraphe2": ["Pour tester l’égalité de contenu entre deux valeurs, on utilise l’operateur $==$:"],
    "c_ex1":["$>>> 2 == 3$"],
    "c_ex2":["$>>> False $"],
    "c_ex3":["$>>> 3 == 3$"],
    "c_ex4":["$>>> True  $"],
    "p_paragraphe3": ["Pour tester l’inégalité de contenu entre deux valeurs, on utilise l’operateur $!=$ :"],
    "c_ex5":["$>>> 2 != 3 $"],
    "c_ex6":["$>>> False  $"],
    "h3_stitre2": ["Infériorité et supériorité, stricts ou larges"],
    "p_paragraphe3": ["Pour savoir si un objet est:"],
    "li_text1_1":[" Strictement inférieur/superieur à un autre, on utilise les operateurs $<$ et $>$ respectivement"],
    "li_text1_2":["Inférieur ou egal/superieur ou egal à un autre, on utilise les operateurs $<=$ et $>=$ respectivement"],
    "c_ex7":["$>>> 120 > 5$"],
    "c_ex8":["$>>> False  $"],
    "c_ex9":["$>>> 3 <= 3 $"],
    "c_ex10":["$>>> True   $"],
    "h3_stitre3": ["Exercice"],
    }